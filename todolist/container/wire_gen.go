// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/google/wire"
	"github.com/k0825/go-gin-ent-sample/config"
	"github.com/k0825/go-gin-ent-sample/controller"
	"github.com/k0825/go-gin-ent-sample/datasource"
	"github.com/k0825/go-gin-ent-sample/repository/implements"
	implements2 "github.com/k0825/go-gin-ent-sample/usecase/implements"
)

// Injectors from wire.go:

func Init() (*controller.TodoController, error) {
	configConfig := config.NewConfig()
	client, err := datasource.NewConnection(configConfig)
	if err != nil {
		return nil, err
	}
	todoRepository, err := implements.NewTodoRepository(client)
	if err != nil {
		return nil, err
	}
	todoFindByIdInteractor := implements2.NewTodoFindByIdInteractor(todoRepository)
	todoCreateInteractor := implements2.NewTodoCreateInteractor(todoRepository)
	todoController := controller.NewTodoController(todoFindByIdInteractor, todoCreateInteractor)
	return todoController, nil
}

// wire.go:

var repositorySet = wire.NewSet(implements.NewTodoRepository)

var usecaseSet = wire.NewSet(implements2.NewTodoFindByIdInteractor, implements2.NewTodoCreateInteractor)

var controllerSet = wire.NewSet(controller.NewTodoController)

var configSet = wire.NewSet(config.NewConfig)
