// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/google/wire"
	"github.com/k0825/go-gin-ent-sample/config"
	"github.com/k0825/go-gin-ent-sample/controller"
	"github.com/k0825/go-gin-ent-sample/datasource"
	"github.com/k0825/go-gin-ent-sample/repository/implements"
	implements2 "github.com/k0825/go-gin-ent-sample/usecase/implements"
)

// Injectors from wire.go:

func Init() (*Container, error) {
	configConfig := config.NewConfig()
	rdbConnection, err := datasource.NewRDBConnection(configConfig)
	if err != nil {
		return nil, err
	}
	todoRepository, err := implements.NewTodoRepository(rdbConnection)
	if err != nil {
		return nil, err
	}
	todoFindByIdInteractor := implements2.NewTodoFindByIdInteractor(todoRepository)
	todoFindAllInteractor := implements2.NewTodoFindAllInteractor(todoRepository)
	todoCreateInteractor := implements2.NewTodoCreateInteractor(todoRepository)
	todoUpdateInteractor := implements2.NewTodoUpdateInteractor(todoRepository)
	todoDeleteInteractor := implements2.NewTodoDeleteInteractor(todoRepository)
	todoController := controller.NewTodoController(todoFindByIdInteractor, todoFindAllInteractor, todoCreateInteractor, todoUpdateInteractor, todoDeleteInteractor)
	container := newContainer(todoController)
	return container, nil
}

// wire.go:

var configSet = wire.NewSet(config.NewConfig)

var datasourceSet = wire.NewSet(datasource.NewRDBConnection)

var repositorySet = wire.NewSet(implements.NewTodoRepository)

var usecaseSet = wire.NewSet(implements2.NewTodoFindByIdInteractor, implements2.NewTodoFindAllInteractor, implements2.NewTodoCreateInteractor, implements2.NewTodoDeleteInteractor, implements2.NewTodoUpdateInteractor)

var controllerSet = wire.NewSet(controller.NewTodoController)

type Container struct {
	TodoController controller.TodoControllerInterface
}

func newContainer(controller2 controller.TodoControllerInterface) *Container {
	return &Container{
		TodoController: controller2,
	}
}
